/* 
 * _cytoscape.css
 * Enhanced styling for Cytoscape graph visualization with space theme
 */

 #cy {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  background-color: var(--theme-bg-primary);
  z-index: 10;
  transition: background-color 0.3s ease;
  border-radius: var(--border-radius-lg, 8px);
  overflow: hidden;
}

/* Container styling and z-index fix */
.canvas-container {
  position: relative;
  overflow: hidden;
  background-color: var(--theme-bg-primary);
  border-radius: var(--border-radius-lg, 8px);
  box-shadow: var(--glass-shadow, 0 8px 32px rgba(0, 0, 0, 0.24));
  border: 1px solid var(--theme-panel-border);
  transition: all 0.3s ease;
}

/* Create proper stacking context */
.__________cytoscape_container {
  position: absolute !important;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 5;
  overflow: visible;
}

/* Fix for cytoscape canvas layers */
[data-id^="layer"] {
  position: absolute !important;
}

[data-id="layer0-selectbox"] {
  z-index: 30 !important;
  background-color: rgba(0, 194, 255, 0.08) !important;
  border: 1px solid rgba(0, 194, 255, 0.4) !important;
  box-shadow: 0 0 15px rgba(0, 194, 255, 0.2) !important;
}

[data-id="layer1-drag"] {
  z-index: 29 !important;
}

[data-id="layer2-node"] {
  z-index: 28 !important;
}

/* Edge styling with glow effect */
.edge {
  line-color: rgba(180, 180, 200, 0.6);
  target-arrow-color: rgba(180, 180, 200, 0.6);
  curve-style: bezier;
  width: 2px;
  opacity: 0.9;
  transition: all 0.3s ease;
  z-index: 10;
}

/* Edge selection and hover states */
.edge.selected {
  line-color: rgba(0, 194, 255, 0.8);
  target-arrow-color: rgba(0, 194, 255, 0.8);
  width: 3px;
  opacity: 1;
  z-index: 15;
  animation: edgePulse 2s infinite;
}

.edge:hover {
  line-color: rgba(0, 194, 255, 0.6);
  target-arrow-color: rgba(0, 194, 255, 0.6);
  opacity: 1;
}

.edge.connected-edge {
  line-color: rgba(0, 194, 255, 0.8);
  target-arrow-color: rgba(0, 194, 255, 0.8);
  width: 3px;
  opacity: 1;
  z-index: 11;
}

/* Node styling with glassmorphism effect */
.node {
  background-color: rgba(44, 62, 80, 0.8);
  color: #ffffff;
  text-align: center;
  border-radius: 8px;
  backdrop-filter: blur(8px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  border: 1px solid rgba(255, 255, 255, 0.1);
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  z-index: 20;
  padding: 8px;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
  font-family: 'Inter', 'Roboto', 'Segoe UI', sans-serif;
}

/* Node type variations */
.ollama-node {
  background: linear-gradient(135deg, rgba(52, 152, 219, 0.7), rgba(52, 152, 219, 0.9));
  border-color: rgba(52, 152, 219, 0.3);
  box-shadow: 0 4px 12px rgba(52, 152, 219, 0.2);
}

.groq-node {
  background: linear-gradient(135deg, rgba(155, 89, 182, 0.7), rgba(155, 89, 182, 0.9));
  border-color: rgba(155, 89, 182, 0.3);
  box-shadow: 0 4px 12px rgba(155, 89, 182, 0.2);
}

/* Node selection and hover states */
.node.selected {
  border-color: rgba(231, 76, 60, 0.9);
  border-width: 3px;
  box-shadow: 0 0 15px rgba(231, 76, 60, 0.5);
  z-index: 30;
  transform: translateZ(5px); /* Create depth */
  animation: nodePulse 2s infinite;
}

.node.hovered {
  border-color: rgba(52, 152, 219, 0.9);
  border-width: 2px;
  box-shadow: 0 0 10px rgba(52, 152, 219, 0.5);
  z-index: 25;
  transform: translateZ(2px) scale(1.02);
}

.node:hover {
  transform: translateY(-2px) scale(1.02);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.25);
  z-index: 10;
}

/* Execution state styling */
.node.executing {
  border-color: rgba(0, 194, 255, 1);
  border-width: 3px;
  box-shadow: 0 0 15px rgba(0, 194, 255, 0.5);
  animation: executingPulse 1.5s infinite;
}

.node.completed {
  border-color: rgba(39, 201, 143, 1);
  border-width: 2px;
  box-shadow: 0 0 10px rgba(39, 201, 143, 0.3);
}

.node.error {
  border-color: rgba(255, 90, 101, 1);
  border-width: 2px;
  box-shadow: 0 0 10px rgba(255, 90, 101, 0.5);
}

.edge.executing {
  line-color: rgba(0, 194, 255, 1);
  target-arrow-color: rgba(0, 194, 255, 1);
  width: 3px;
  opacity: 1;
  animation: edgePulse 1.5s infinite;
}

.edge.completed {
  line-color: rgba(39, 201, 143, 1);
  target-arrow-color: rgba(39, 201, 143, 1);
  width: 2.5px;
  opacity: 1;
}

.edge.error {
  line-color: rgba(255, 90, 101, 1);
  target-arrow-color: rgba(255, 90, 101, 1);
  width: 2.5px;
  opacity: 1;
}

/* Path highlighting */
.node.highlighted,
.edge.highlighted {
  animation: highlightPulse 2s infinite;
}

/* Light theme adjustments for nodes and edges */
.theme-light .node {
  background-color: rgba(255, 255, 255, 0.9);
  color: #2d3748;
  text-shadow: none;
  border: 1px solid rgba(0, 0, 0, 0.1);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.theme-light .node.selected {
  border-color: rgba(100, 53, 201, 0.9);
  box-shadow: 0 0 15px rgba(100, 53, 201, 0.3);
}

.theme-light .node.hovered {
  border-color: rgba(0, 120, 212, 0.9);
  box-shadow: 0 0 10px rgba(0, 120, 212, 0.3);
}

.theme-light .node.executing {
  border-color: rgba(0, 120, 212, 1);
  box-shadow: 0 0 15px rgba(0, 120, 212, 0.4);
}

.theme-light .node.completed {
  border-color: rgba(56, 161, 105, 1);
  box-shadow: 0 0 10px rgba(56, 161, 105, 0.3);
}

.theme-light .node.error {
  border-color: rgba(229, 62, 62, 1);
  box-shadow: 0 0 10px rgba(229, 62, 62, 0.3);
}

.theme-light .edge {
  line-color: rgba(160, 174, 192, 0.6);
  target-arrow-color: rgba(160, 174, 192, 0.6);
}

.theme-light .edge.selected {
  line-color: rgba(0, 120, 212, 0.8);
  target-arrow-color: rgba(0, 120, 212, 0.8);
}

.theme-light .edge.executing {
  line-color: rgba(0, 120, 212, 1);
  target-arrow-color: rgba(0, 120, 212, 1);
}

.theme-light .edge.completed {
  line-color: rgba(56, 161, 105, 1);
  target-arrow-color: rgba(56, 161, 105, 1);
}

.theme-light .edge.error {
  line-color: rgba(229, 62, 62, 1);
  target-arrow-color: rgba(229, 62, 62, 1);
}

/* Animation keyframes */
@keyframes nodePulse {
  0% { box-shadow: 0 0 10px rgba(231, 76, 60, 0.5); }
  50% { box-shadow: 0 0 20px rgba(231, 76, 60, 0.7); }
  100% { box-shadow: 0 0 10px rgba(231, 76, 60, 0.5); }
}

@keyframes edgePulse {
  0% { opacity: 0.7; }
  50% { opacity: 1; }
  100% { opacity: 0.7; }
}

@keyframes executingPulse {
  0% { box-shadow: 0 0 10px rgba(0, 194, 255, 0.3); }
  50% { box-shadow: 0 0 20px rgba(0, 194, 255, 0.7); }
  100% { box-shadow: 0 0 10px rgba(0, 194, 255, 0.3); }
}

@keyframes highlightPulse {
  0% { opacity: 0.8; }
  50% { opacity: 1; }
  100% { opacity: 0.8; }
}

/* First define all keyframes globally (outside selectors) */

/* Light theme animations */
@keyframes executingPulse-light {
  0% { box-shadow: 0 0 10px rgba(0, 120, 212, 0.3); }
  50% { box-shadow: 0 0 20px rgba(0, 120, 212, 0.7); }
  100% { box-shadow: 0 0 10px rgba(0, 120, 212, 0.3); }
}

@keyframes nodePulse-light {
  0% { box-shadow: 0 0 10px rgba(100, 53, 201, 0.3); }
  50% { box-shadow: 0 0 20px rgba(100, 53, 201, 0.5); }
  100% { box-shadow: 0 0 10px rgba(100, 53, 201, 0.3); }
}

/* Dark theme animations */
@keyframes executingPulse-dark {
  0% { box-shadow: 0 0 10px rgba(0, 194, 255, 0.3); }
  50% { box-shadow: 0 0 20px rgba(0, 194, 255, 0.7); }
  100% { box-shadow: 0 0 10px rgba(0, 194, 255, 0.3); }
}

@keyframes nodePulse-dark {
  0% { box-shadow: 0 0 10px rgba(174, 0, 255, 0.3); }
  50% { box-shadow: 0 0 20px rgba(174, 0, 255, 0.5); }
  100% { box-shadow: 0 0 10px rgba(174, 0, 255, 0.3); }
}

/* Then reference these animations in your theme selectors */
.theme-light .status-indicator.executing .status-dot::after {
  animation-name: executingPulse-light;
}

.theme-light .node-execution-item.active {
  animation-name: nodePulse-light;
}

.theme-dark .status-indicator.executing .status-dot::after {
  animation-name: executingPulse-dark;
}

.theme-dark .node-execution-item.active {
  animation-name: nodePulse-dark;
}

/* Shared animation properties that don't change between themes */
.status-indicator.executing .status-dot::after,
.node-execution-item.active {
  animation-duration: 2s;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  #cy {
    border-radius: var(--border-radius-md, 4px);
  }
  
  .node {
    font-size: 11px;
    width: 100px;
    height: 35px;
  }
}


/* 
 * Cytoscape Glassmorphism Fix
 * Applies proper glassmorphism without blurring text
 */

/* Base node styling with glassmorphism */
.cy-node {
  /* The trick is to use two elements - the container with blur and the content without blur */
  position: relative;
  border-radius: 8px !important;
  overflow: visible !important;
}

/* Apply the backdrop filter to a pseudo-element instead of directly to the node */
.cy-node::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(255, 255, 255, 0.15); /* Light glass effect */
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  border-radius: 8px;
  border: 1px solid rgba(255, 255, 255, 0.2);
  z-index: -1; /* Place behind the content */
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

/* Dark theme adjustment */
.theme-dark .cy-node::before {
  background-color: rgba(18, 22, 36, 0.7);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

/* Ensure text is rendered sharply above the blur */
.cy-node text {
  font-weight: 500 !important;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1) !important;
}

/* For light theme */
.theme-light .cy-node text {
  /* Improve text contrast in light theme */
  text-shadow: none !important;
  font-weight: 600 !important;
}

/* For the container where Cytoscape is rendered */
#cy {
  background-color: transparent !important;
}

.canvas-container {
  position: relative;
  overflow: hidden;
  border-radius: 12px;
  background-color: rgba(18, 22, 36, 0.3); /* Very subtle background */
}

/* Apply a subtle background texture/gradient to enhance the glass effect */
.canvas-container::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: linear-gradient(120deg, 
    rgba(255, 255, 255, 0.03) 0%, 
    rgba(255, 255, 255, 0) 70%);
  pointer-events: none;
  z-index: 1;
}

/* Adjust border colors instead of using blur */
.cy-edge {
  opacity: 0.7;
  transition: opacity 0.3s ease;
}

.cy-edge:hover {
  opacity: 1;
}

/* Enhanced hover effect without blur */
.cy-node.hovered {
  box-shadow: 0 0 15px rgba(52, 152, 219, 0.5) !important;
  z-index: 200 !important;
  transform: translateZ(10px) !important;
}

.cy-node.selected {
  box-shadow: 0 0 20px rgba(231, 76, 60, 0.6) !important;
  z-index: 300 !important;
  transform: translateZ(20px) !important;
}

/* Node type-specific styling */
.ollama-node::before {
  background-color: rgba(52, 152, 219, 0.7) !important;
  border-color: rgba(52, 152, 219, 0.6) !important;
}

.groq-node::before {
  background-color: rgba(155, 89, 182, 0.7) !important;
  border-color: rgba(155, 89, 182, 0.6) !important;
}

/* Fix for specific text elements to ensure they're sharp */
[data-id="layer2-node"] text {
  filter: none !important;
  backdrop-filter: none !important;
  -webkit-backdrop-filter: none !important;
}

/* Light theme specific adjustments for cytoscape nodes */
.theme-light .canvas-container {
  background-color: rgba(248, 249, 252, 0.8);
}

.theme-light .cy-node::before {
  background-color: rgba(255, 255, 255, 0.7);
  border: 1px solid rgba(0, 120, 212, 0.15);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
}

.theme-light .ollama-node::before {
  background-color: rgba(52, 152, 219, 0.1) !important;
  border-color: rgba(52, 152, 219, 0.3) !important;
}

.theme-light .groq-node::before {
  background-color: rgba(155, 89, 182, 0.1) !important;
  border-color: rgba(155, 89, 182, 0.3) !important;
}

/* Custom CSS for text labels to ensure they're never blurred */
.cy-label {
  text-rendering: geometricPrecision !important;
  font-smooth: always !important;
  -webkit-font-smoothing: antialiased !important;
  filter: none !important;
}